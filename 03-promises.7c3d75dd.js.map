{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,oBAwBpC,SAASK,EAAcC,EAAUL,GAC/B,IAAMM,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUL,UAEpBW,EAAO,CAAEN,WAAUL,YAEpBA,MA9BPJ,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOrB,EAAKI,MAAMkB,OAC7BC,EAAYF,OAAOrB,EAAKK,KAAKiB,OAC7BE,EAAcH,OAAOrB,EAAKM,OAAOgB,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCjB,EAAciB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MACjBN,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,WAE9D2B,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUL,EAAKuB,EAALvB,MAClBN,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAAN1B,EAAM,WAE9DgB,GAAcG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(refs.delay.value);\n  const stepValue = Number(refs.step.value);\n  const amountValue = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7c3d75dd.js.map"}